{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","App","classes","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8WAoBMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQL,EAAMK,OAAOC,OAAS,GAEhCA,OAAQ,CACNC,MAXc,IAYdC,WAAY,GAEdC,YAAa,CACXF,MAfc,KAiBhBG,gBAAiB,CACfC,SAAU,QAEZC,QAAS,CACPC,SAAU,EACVC,QAASd,EAAMe,QAAQ,SAyEdC,EApEH,WACV,IAAMC,EAAUnB,IAEhB,OACE,sBAAKoB,UAAWD,EAAQf,KAAxB,UACE,cAACiB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQb,OAA5C,SACE,cAACkB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,8CAKJ,eAACC,EAAA,EAAD,CACER,UAAWD,EAAQX,OACnBkB,QAAQ,YACRP,QAAS,CACPU,MAAOV,EAAQR,aAJnB,UAOE,cAACa,EAAA,EAAD,IACA,sBAAKJ,UAAWD,EAAQP,gBAAxB,UACE,eAACkB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,eAEzB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,gBAEzB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,YAEzB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,gBAG3B,cAACC,EAAA,EAAD,IACA,cAACN,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAS,wBAKjC,sBAAMf,UAAWD,EAAQL,QAAzB,SACE,cAACU,EAAA,EAAD,UC3FOa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90e31f25.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport MessageIcon from '@material-ui/icons/Message';\nimport FiberNewRoundedIcon from '@material-ui/icons/FiberNewRounded';\nimport MusicNoteRoundedIcon from '@material-ui/icons/MusicNoteRounded';\nimport SettingsApplicationsRoundedIcon from '@material-ui/icons/SettingsApplicationsRounded';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            My Social Network TypeScript\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem button>\n              <ListItemIcon>\n                <AccountBoxIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Profile'} />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <MessageIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Messages'} />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <FiberNewRoundedIcon />\n              </ListItemIcon>\n              <ListItemText primary={'News'} />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon>\n                <MusicNoteRoundedIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Music'} />\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n              <ListItem button>\n                <ListItemIcon>\n                  <SettingsApplicationsRoundedIcon />\n                </ListItemIcon>\n                <ListItemText primary={'Settings'} />\n              </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n\n      </main>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}